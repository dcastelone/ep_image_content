.image {
  display: inline-block;
  position: relative;
  line-height: 0;
}

.image>img {
  height: auto !important;
  -moz-user-select: -moz-none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  user-select: none;
  display: block;
}

/* Styles for the new handle spans */
.image span.image-resize-handle {
  content: '';
  position: absolute;
  width: 7px; 
  height: 7px;
  background-color: #1a73e8; /* Google Docs blue square */
  border: 1px solid #fff; /* White border for visibility */
  z-index: 1;
}

.image span.image-resize-handle.tl { top: -2px; left: -2px; }
.image span.image-resize-handle.tr { top: -2px; right: -2px; }
.image span.image-resize-handle.bl { bottom: -2px; left: -2px; }
.image span.image-resize-handle.br { bottom: -2px; right: -2px; cursor: ew-resize; }


/* Hide the handles if the image is very small */
.image[style*="width: 10%;"] span.image-resize-handle,
.image[style*="width: 11%;"] span.image-resize-handle,
.image[style*="width: 12%;"] span.image-resize-handle,
.image[style*="width: 13%;"] span.image-resize-handle,
.image[style*="width: 14%;"] span.image-resize-handle,
.image[style*="width: 15%;"] span.image-resize-handle {
    display: none;
}

/* Rules moved from clientHooks.js aceEditorCSS */
.ace-line .inline-image.white-space-pre-wrap {
  white-space: pre-wrap !important;
}

span.inline-image.character {
  white-space: pre-wrap !important;
}

/* CSS Pseudo-element approach for image display */
span.inline-image.image-placeholder {
  /* Hide original text content (placeholder character or "undefined") */
  color: transparent; /* Make text invisible */
  line-height: 0; /* Try to collapse height */
  display: inline-block;
  vertical-align: middle; /* Align the container span */
  /* Prevent selection of the underlying space/character */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative; /* Added */
  max-width: 100%; /* ADDED to make placeholder respect its container's width */
}

/* Style the INNER span to display the image */
span.inline-image.image-placeholder span.image-inner {
  content: ''; /* Necessary for pseudo-element */
  display: inline-block; /* Or block, if placeholder only contains this and handles */
  max-width: 100%; /* Keep: ensures inner span respects outer placeholder's width */
  height: auto; /* ADDED: Allow aspect-ratio to determine height */
  aspect-ratio: var(--image-css-aspect-ratio, 1 / 1); /* ADDED: Use CSS var, fallback to 1:1 */
  background-image: var(--image-src); /* Use the CSS variable */
  background-size: contain; /* Use contain to fit image */
  background-repeat: no-repeat;
  background-position: center center;
}

/* === START Styles for resize handles (ported from old plugin) === */

/* Base style for handle spans */
span.inline-image.image-placeholder span.image-resize-handle {
  content: '';
  position: absolute;
  width: 7px; 
  height: 7px;
  background-color: #1a73e8; /* Google Docs blue square */
  border: 1px solid #fff; /* White border for visibility */
  z-index: 1;
  display: none; /* Initially hidden */
}

/* Show handles on hover/focus of the outer container */
/* Adjust as needed for desired trigger (e.g., on click/selection) */
span.inline-image.image-placeholder:hover span.image-resize-handle,
span.inline-image.image-placeholder:focus span.image-resize-handle,
span.inline-image.image-placeholder.selected span.image-resize-handle { /* Added .selected class trigger */
  display: block;
}

/* Position individual handles */
span.inline-image.image-placeholder span.image-resize-handle.tl { top: -2px; left: -2px; cursor: nwse-resize; }
span.inline-image.image-placeholder span.image-resize-handle.tr { top: -2px; right: -2px; cursor: nesw-resize; }
span.inline-image.image-placeholder span.image-resize-handle.bl { bottom: -2px; left: -2px; cursor: nesw-resize; }
span.inline-image.image-placeholder span.image-resize-handle.br { bottom: -2px; right: -2px; cursor: nwse-resize; }

/* Hide the handles if the image inner span is very small (example thresholds) */
/* This might need JS adjustment based on calculated width */

/* === END Styles for resize handles === */